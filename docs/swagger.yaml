definitions:
  request.AddOrder:
    properties:
      id_customer:
        type: string
      id_product:
        type: integer
      quantity:
        type: integer
    required:
    - id_customer
    - id_product
    - quantity
    type: object
  request.AddProduct:
    properties:
      id_seller:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    required:
    - id_seller
    - name
    - price
    - quantity
    type: object
  request.AddWallet:
    properties:
      balance:
        type: integer
      id_customer:
        type: string
    required:
    - balance
    - id_customer
    type: object
  request.CustomerDelete:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.CustomerLogin:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  request.CustomerRegister:
    properties:
      email:
        example: dihanto@gmail.com
        type: string
      name:
        example: dihanto
        minLength: 5
        type: string
      password:
        example: awesdkoire
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  request.CustomerUpdate:
    properties:
      email:
        type: string
      name:
        minLength: 5
        type: string
    required:
    - email
    - name
    type: object
  request.SellerDelete:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.SellerLogin:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  request.SellerRegister:
    properties:
      email:
        type: string
      name:
        minLength: 5
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  request.SellerUpdate:
    properties:
      email:
        type: string
      name:
        minLength: 5
        type: string
    required:
    - email
    - name
    type: object
  request.UpdateProduct:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    required:
    - id
    - name
    - price
    - quantity
    type: object
  request.UpdateWallet:
    properties:
      balance:
        type: integer
      id_customer:
        type: string
    required:
    - balance
    - id_customer
    type: object
  response.WebResponse:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: success
        type: string
    type: object
host: localhost:2000
info:
  contact:
    email: dihanto2306@gmail.com
    name: Dihanto
  description: This is a simple API for marketplace.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Go-Toko API
  version: "1.0"
paths:
  /customer:
    delete:
      description: Delete customer
      parameters:
      - description: Delete customer
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.CustomerDelete'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Delete customer
      tags:
      - Customer
    put:
      description: Update customer
      parameters:
      - description: Update Customer
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.CustomerUpdate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Update customer
      tags:
      - Customer
  /customer/login:
    post:
      description: Login customer
      parameters:
      - description: Login Customer
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.CustomerLogin'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      summary: Login customer
      tags:
      - Customer
  /customer/register:
    post:
      description: Register Customer
      parameters:
      - description: Register Customer
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.CustomerRegister'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.WebResponse'
      summary: Register customer
      tags:
      - Customer
  /order:
    post:
      description: Add order
      parameters:
      - description: Request Body
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.AddOrder'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Add order
      tags:
      - Order
  /order/{id}:
    post:
      description: Find order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Find order
      tags:
      - Order
  /product:
    get:
      description: Get product
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Get product
      tags:
      - Product
    post:
      description: Add product
      parameters:
      - description: Add Product
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.AddProduct'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Add product
      tags:
      - Product
  /product/{id}:
    delete:
      description: Delete product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Delete product
      tags:
      - Product
    get:
      description: Find product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Find product
      tags:
      - Product
    put:
      description: Update product
      parameters:
      - description: Update Product
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProduct'
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Update product
      tags:
      - Product
  /seller:
    delete:
      description: Delete seller
      parameters:
      - description: Delete Seller
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.SellerDelete'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Delete seller
      tags:
      - Seller
    put:
      description: Update seller
      parameters:
      - description: Update Seller
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.SellerUpdate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Update seller
      tags:
      - Seller
  /seller/login:
    post:
      description: Register seller
      parameters:
      - description: Login Seller
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.SellerLogin'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      summary: Register seller
      tags:
      - Seller
  /seller/register:
    post:
      description: Register Seller
      parameters:
      - description: Register Seller
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.SellerRegister'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.WebResponse'
      summary: Register seller
      tags:
      - Seller
  /wallet:
    get:
      description: Get wallet
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Get wallet
      tags:
      - Wallet
    post:
      description: Add wallet
      parameters:
      - description: Add Wallet
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.AddWallet'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Add wallet
      tags:
      - Wallet
    put:
      description: Update wallet
      parameters:
      - description: Update Wallet
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateWallet'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
      security:
      - JWTAuth: []
      summary: Update wallet
      tags:
      - Wallet
swagger: "2.0"
